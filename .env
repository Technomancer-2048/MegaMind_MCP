# MegaMind MCP Server - Phase 3 Container Environment Configuration
# Copy this file to .env and fill in your specific values

# ====================================================================
# DATABASE CONFIGURATION
# ====================================================================

# MySQL Root Password (Required for container startup)
MYSQL_ROOT_PASSWORD=test_root_password_123

# MegaMind Database Configuration
MEGAMIND_DB_NAME=megamind_database
MEGAMIND_DB_USER=megamind_user
MEGAMIND_DB_PASSWORD=test_db_password_456

# ====================================================================
# NETWORK BINDING CONFIGURATION
# ====================================================================

# MySQL Server Binding
MYSQL_BIND_IP=10.255.250.22
MYSQL_PORT=3309

# Redis Server Binding
REDIS_BIND_IP=10.255.250.22
REDIS_PORT=6379

# HTTP MCP Server Binding (Phase 3 - Default service)
HTTP_BIND_IP=10.255.250.22
HTTP_PORT=8080

# Legacy stdio MCP Server Binding (Optional - for backward compatibility)
STDIO_BIND_IP=10.255.250.22
STDIO_PORT=8002

# Frontend UI Service Binding (Phase 3 - Chunk Review Interface)
FRONTEND_BIND_IP=10.255.250.22
FRONTEND_PORT=5004

# ====================================================================
# MCP HTTP SERVER CONFIGURATION (Phase 3)
# ====================================================================

# Realm Management
MCP_DEFAULT_REALM=PROJECT
MCP_REALM_FACTORY=dynamic
MCP_ENHANCED_MONITORING=true

# Performance Tuning
CONNECTION_POOL_SIZE=20
EMBEDDING_CACHE_SIZE=1000
EMBEDDING_DEVICE=cpu
EMBEDDING_BATCH_SIZE=50

# Logging Configuration
MEGAMIND_LOG_LEVEL=INFO
MEGAMIND_DEBUG=false

# ====================================================================
# APPROVAL WORKFLOW CONFIGURATION (GitHub Issue #20)
# ====================================================================

# Direct Commit Mode - bypass approval workflow
# true: All operations (create, update, relationships) commit directly to database (development)
# false: All operations require approval workflow (production - recommended)
MEGAMIND_DIRECT_COMMIT_MODE=true

# ====================================================================
# DEPLOYMENT PROFILES
# ====================================================================

# Uncomment to enable legacy stdio server alongside HTTP server
# COMPOSE_PROFILES=legacy

# Uncomment to enable production features (nginx, monitoring, etc.)
# COMPOSE_PROFILES=production

# ====================================================================
# EXAMPLE CONFIGURATIONS
# ====================================================================

# Development Configuration Example:
# MYSQL_ROOT_PASSWORD=dev_root_pass
# MEGAMIND_DB_PASSWORD=dev_db_pass
# HTTP_BIND_IP=127.0.0.1
# HTTP_PORT=8080
# MEGAMIND_LOG_LEVEL=DEBUG
# MEGAMIND_DEBUG=true

# ====================================================================
# FRONTEND UI SERVICE CONFIGURATION (Phase 3)
# ====================================================================

# Frontend Environment (development/production)
FRONTEND_ENV=development

# Frontend Logging
FRONTEND_LOG_LEVEL=INFO

# Frontend Security
FRONTEND_SECRET_KEY=megamind_frontend_secret_key_change_in_production

# Production Configuration Example:
# MYSQL_ROOT_PASSWORD=prod_secure_root_password_123
# MEGAMIND_DB_PASSWORD=prod_secure_db_password_456
# HTTP_BIND_IP=0.0.0.0
# HTTP_PORT=8080
# CONNECTION_POOL_SIZE=50
# EMBEDDING_CACHE_SIZE=2000
# MEGAMIND_LOG_LEVEL=INFO
# COMPOSE_PROFILES=production

# ====================================================================
# SECURITY NOTES
# ====================================================================

# 1. Never commit this file with real passwords to version control
# 2. Use strong, unique passwords for production deployments
# 3. Consider using Docker secrets for production environments
# 4. Limit network binding IPs to specific interfaces in production
# 5. Enable firewall rules to restrict access to database ports