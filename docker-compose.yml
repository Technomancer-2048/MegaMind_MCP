version: '3.8'

services:
  megamind-mysql:
    image: mysql:8.0
    container_name: megamind-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-megamind_root_pass}
      MYSQL_DATABASE: megamind_database
      MYSQL_USER: megamind_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-megamind_secure_pass}
    volumes:
      - megamind_db_data:/var/lib/mysql
      - ./database/context_system:/docker-entrypoint-initdb.d
    ports:
      - "10.255.250.22:3309:3306"
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - megamind-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
      interval: 30s

  megamind-redis:
    image: redis:7-alpine
    container_name: megamind-redis
    ports:
      - "10.255.250.22:6379:6379"
    volumes:
      - megamind_redis_data:/data
    restart: unless-stopped
    networks:
      - megamind-network
    command: redis-server --appendonly yes

  megamind-mcp-server:
    build: ./mcp_server
    container_name: megamind-mcp-server
    environment:
      MEGAMIND_DB_HOST: megamind-mysql
      MEGAMIND_DB_PORT: 3306
      MEGAMIND_DB_NAME: megamind_database
      MEGAMIND_DB_USER: megamind_user
      MEGAMIND_DB_PASSWORD: ${MYSQL_PASSWORD:-megamind_secure_pass}
      REDIS_URL: redis://megamind-redis:6379/3
      MEGAMIND_MCP_SERVER_PORT: 8002
      CONNECTION_POOL_SIZE: 10
    depends_on:
      megamind-mysql:
        condition: service_healthy
      megamind-redis:
        condition: service_started
    ports:
      - "10.255.250.22:8002:8002"
    restart: unless-stopped
    networks:
      - megamind-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8002/health', timeout=5)"]
      timeout: 10s
      retries: 3
      interval: 30s

volumes:
  megamind_db_data:
    driver: local
  megamind_redis_data:
    driver: local

networks:
  megamind-network:
    driver: bridge