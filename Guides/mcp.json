{
  "mcpServers": {
    "megamind-context-db": {
      "description": "MegaMind Context Database MCP Server - Secure STDIO-HTTP Bridge (Recommended)",
      "command": "python3",
      "args": ["/Data/MCP_Servers/MegaMind_MCP/mcp_server/stdio_http_bridge.py"],
      "env": {
        "MEGAMIND_PROJECT_REALM": "YOUR_PROJECT_REALM",
        "MEGAMIND_PROJECT_NAME": "Your Project Display Name",
        "MEGAMIND_DEFAULT_TARGET": "PROJECT"
      }
    },
    "megamind-context-db-legacy": {
      "description": "MegaMind Database MCP Server - Direct Docker (Not Recommended - No Security)",
      "command": "docker",
      "args": [
        "exec", "-i", "megamind-mcp-server-http",
        "python", "-m", "mcp_server.megamind_database_server"
      ],
      "env": {
        "MEGAMIND_PROJECT_REALM": "YOUR_PROJECT_REALM",
        "MEGAMIND_PROJECT_NAME": "Your Project Display Name",
        "MEGAMIND_DEFAULT_TARGET": "PROJECT"
      }
    }
  },
  "_usage_notes": {
    "transport_options": {
      "stdio_bridge": "Secure STDIO-HTTP bridge with realm filtering (Recommended)",
      "docker_direct": "Direct Docker container access (No security controls)",
      "legacy_stdio": "Traditional database connection (Requires environment setup)"
    },
    "security_features": {
      "stdio_bridge": {
        "global_access_blocked": "Prevents unauthorized GLOBAL realm access",
        "request_sanitization": "All requests filtered before reaching backend",
        "graceful_degradation": "Blocked requests redirected to PROJECT realm",
        "audit_logging": "Security violations logged for monitoring"
      }
    },
    "realm_configuration": {
      "description": "Realm can be specified in multiple ways (priority order):",
      "sources": [
        "Tool arguments: {'realm_id': 'TARGET_REALM'}",
        "JSON-RPC params: {'realm_id': 'TARGET_REALM'}",
        "HTTP headers: {'X-MCP-Realm-ID': 'TARGET_REALM'}",
        "Query parameters: ?realm_id=TARGET_REALM",
        "Default fallback: PROJECT or server default"
      ]
    },
    "starting_http_server": {
      "command": "cd /Data/MCP_Servers/MegaMind_MCP/mcp_server && ../venv/bin/python http_server.py",
      "environment_variables": {
        "MCP_HOST": "0.0.0.0 (default: localhost)",
        "MCP_PORT": "8080 (default)",
        "MCP_DEFAULT_REALM": "PROJECT (default)",
        "MCP_REALM_FACTORY": "dynamic (default: standard)",
        "MCP_ENHANCED_MONITORING": "true (default: false)"
      },
      "endpoints": {
        "jsonrpc": "POST /mcp/jsonrpc - Main MCP JSON-RPC endpoint",
        "health": "GET /mcp/health - Basic health check",
        "status": "GET /mcp/status - Detailed server status and metrics",
        "realms": "GET /mcp/realms - List available realms",
        "realm_health": "GET /mcp/realms/{realm_id}/health - Check specific realm",
        "api_docs": "GET /mcp/api - API documentation"
      }
    },
    "migration_guide": {
      "phase1_compatibility": "All existing stdio clients continue to work unchanged",
      "realm_parameters": "New optional realm_id parameter added to all tools",
      "performance_benefits": {
        "startup_time": "30-90s â†’ 1s response time",
        "resource_sharing": "Multiple clients share single embedding service",
        "concurrent_access": "Support for multiple simultaneous clients"
      }
    },
    "example_tool_calls": {
      "without_realm": {
        "method": "tools/call",
        "params": {
          "name": "mcp__megamind__search_chunks",
          "arguments": {
            "query": "search terms",
            "limit": 10
          }
        }
      },
      "with_realm_in_arguments_allowed": {
        "method": "tools/call",
        "params": {
          "name": "mcp__megamind__search_chunks",
          "arguments": {
            "query": "search terms",
            "limit": 10,
            "realm_id": "PROJECT"
          }
        }
      },
      "with_realm_in_arguments_blocked": {
        "method": "tools/call",
        "params": {
          "name": "mcp__megamind__search_chunks",
          "arguments": {
            "query": "search terms",
            "limit": 10,
            "realm_id": "GLOBAL"
          }
        },
        "note": "This will be blocked and forced to PROJECT realm by security bridge"
      },
      "with_realm_in_header": {
        "headers": {
          "X-MCP-Realm-ID": "CUSTOM_REALM"
        },
        "method": "tools/call",
        "params": {
          "name": "mcp__context_db__search_chunks",
          "arguments": {
            "query": "search terms",
            "limit": 10
          }
        }
      }
    }
  }
}